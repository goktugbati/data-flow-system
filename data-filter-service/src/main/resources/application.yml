server:
  port: 8082

spring:
  application:
    name: data-filter-service
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    publisher-confirm-type: simple
    publisher-returns: true
    cache:
      connection:
        mode: connection
      channel:
        size: 25
    dynamic: true

websocket:
  generator:
    url: ws://data-generator:8081/ws/data
    max-retries: 5
    retry-delay-ms: 2000

# RabbitMQ configuration
rabbitmq:
  exchange-name: ${RABBITMQ_EXCHANGE_NAME:data-exchange}
  database-queue: database-queue
  mongodb-queue: mongodb-queue
  routing-key: common.event

# File storage configuration
storage:
  base-path: /data/dataflow
  paths:
    filtered: ${storage.base-path}/filtered
    archive: ${storage.base-path}/archive
    temp: ${storage.base-path}/temp
  retention:
    days: 30
  flush-interval-ms: 5000

logging:
  level:
    com.dataflow.dataflowsystem.filter: DEBUG
    org.springframework.amqp: DEBUG