server:
  port: 8082

spring:
  application:
    name: data-filter-service

  # RabbitMQ Connection Configuration
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    publisher-confirm-type: simple
    publisher-returns: true
    cache:
      connection:
        mode: connection
      channel:
        size: 25
    dynamic: true

# WebSocket Configuration
websocket:
  generator:
    url: ws://data-generator:8081/ws/data
    max-retries: 5
    retry-delay-ms: 2000

# RabbitMQ Queue Configuration
rabbitmq:
  exchange-name: ${RABBITMQ_EXCHANGE_NAME:data-exchange}
  database-queue: database-queue
  mongodb-queue: mongodb-queue
  routing-key: common.event

# File Storage Configuration
storage:
  base-path: /data/dataflow
  paths:
    filtered: ${storage.base-path}/filtered
    archive: ${storage.base-path}/archive
    temp: ${storage.base-path}/temp
  retention:
    days: 30
  flush-interval-ms: 5000

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    metrics:
      enabled: true
    configs:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      webSocketCircuitBreaker:
        baseConfig: default
        failureRateThreshold: 50
        waitDurationInOpenState: 10000ms
        slidingWindowSize: 10
      messageQueueCircuitBreaker:
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000ms
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowSize: 10
        minimumNumberOfCalls: 5

# Monitoring Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    rabbit:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true

# Logging Configuration
logging:
  level:
    com.dataflow.dataflowsystem.filter: DEBUG
    org.springframework.amqp: DEBUG