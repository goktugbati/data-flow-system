server:
  port: 8084

spring:
  application:
    name: data-generator-service
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://mongodb:27017/dataflow}
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2

rabbitmq:
  queue-name: ${RABBITMQ_QUEUE_NAME:mongodb-queue}
  exchange-name: ${RABBITMQ_EXCHANGE_NAME:data-exchange}
  routing-key: mongodb.event
  max-retries: 3

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
    instances:
      mongoWriterCircuitBreaker:
        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true

logging:
  level:
    com.dataflow.dataflowsystem.mongodb: DEBUG